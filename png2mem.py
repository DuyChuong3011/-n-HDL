import sys
from PIL import Image
import os

# --- THAM S·ªê C·∫§U H√åNH ---
TARGET_SIZE = (512, 512) 
# -------------------------

def convert_png_to_mem(input_path, output_path):
    try:
        with Image.open(input_path) as img:
            img = img.convert('L')
            W_S, H_S = img.size 
            
            # T√≠nh to√°n t·ª∑ l·ªá co gi√£n
            ratio = min(TARGET_SIZE[0] / W_S, TARGET_SIZE[1] / H_S)

            # T√≠nh k√≠ch th∆∞·ªõc ·∫£nh m·ªõi (ƒë√£ co gi√£n t·ª∑ l·ªá)
            new_W = int(W_S * ratio)
            new_H = int(H_S * ratio)
            
            # ƒê·ªïi k√≠ch th∆∞·ªõc ·∫£nh theo t·ª∑ l·ªá (proportional resize)
            img_resized = img.resize((new_W, new_H), Image.Resampling.LANCZOS)
            
            # T·∫°o khung h√¨nh m·ªõi 720x720 v·ªõi n·ªÅn ƒêen (0 cho Grayscale)
            new_img = Image.new('L', TARGET_SIZE, 0) 
            
            # üí° S·ª¨A L·ªñI CƒÇN GI·ªÆA üí°
            # T√≠nh v·ªã tr√≠ ƒë·ªÉ d√°n ·∫£nh v√†o ch√≠nh gi·ªØa
            # S·ª≠ d·ª•ng ph√©p chia l√†m tr√≤n ƒë·ªÉ tr√°nh l·ªói d·ªãch chuy·ªÉn 1 pixel
            x_offset = (TARGET_SIZE[0] - new_W) // 2
            y_offset = (TARGET_SIZE[1] - new_H) // 2
            
            # D√°n ·∫£nh ƒë√£ ƒë·ªïi k√≠ch th∆∞·ªõc v√†o gi·ªØa khung h√¨nh
            new_img.paste(img_resized, (x_offset, y_offset))
            
            pixel_data = list(new_img.getdata())

    except FileNotFoundError:
        print(f"L·ªói: Kh√¥ng t√¨m th·∫•y t·ªáp {input_path}")
        return
    except Exception as e:
        print(f"L·ªói khi x·ª≠ l√Ω ·∫£nh: {e}")
        return

    # Ghi d·ªØ li·ªáu pixel 8-bit ra t·ªáp .mem
    with open(output_path, 'w') as f:
        print(f"B·∫Øt ƒë·∫ßu ghi {len(pixel_data)} pixel 8-bit ra {output_path}...")
        
        for value in pixel_data:
            f.write(f"{value:02x}\n")

    print(f"ƒê√£ chuy·ªÉn ƒë·ªïi th√†nh c√¥ng. T·ªáp .mem ƒë√£ ƒë∆∞·ª£c l∆∞u t·∫°i: {output_path}")

if __name__ == "__main__":
    if len(sys.argv) != 3:
        print("S·ª≠ d·ª•ng: python png2mem.py <ƒë∆∞·ªùng_d·∫´n_t·ªõi_·∫£nh_input.png> <t√™n_t·ªáp_output.mem>")
    else:
        input_file = sys.argv[1]
        output_file = sys.argv[2]
        convert_png_to_mem(input_file, output_file)